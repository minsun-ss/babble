apiVersion: apps/v1
kind: Deployment
metadata:
  name: babel
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: babel
  template:
    metadata:
      labels:
        app: babel
    spec:
      containers:
        - name: babel
          image: docker.io/shsung/babel:1.0.0
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
---
# Service for the application
apiVersion: v1
kind: Service
metadata:
  name: babel-service
  namespace: apps
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: babel
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: babel-ingress
  namespace: apps
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: babel-service
              port:
                number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: babel-pvc
  namespace: apps
spec:
  # storage class name must be retreived from kubectl get storageclass
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---

